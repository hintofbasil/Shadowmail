---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: shadowmail
  name: shadowmail-flask
  labels:
    app: shadowmail
    component: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shadowmail
      component: flask
  template:
    metadata:
      labels:
        app: shadowmail
        component: flask
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '80'
    spec:
      containers:
      - name: flask
        image: 265777547582.dkr.ecr.eu-west-1.amazonaws.com/shadowmail-flask:${DOCKER_BUILD_NUMBER}
        ports:
          - containerPort: 8000
        envFrom:
        - configMapRef:
            name: shadowmail-config
        - secretRef:
            name: flask-secrets
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shadowmail-config
  namespace: shadowmail
data:
  DB_DOMAIN: "${DB_DOMAIN}"
  MAIL_SERVER_URI: "shadowmail-postfix-service.shadowmail.svc.cluster.local"
  FLASK_APP: "/app/main.py"
  APP_SETTINGS: Production
  DB_PROTOCOL: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: flask-secrets
  namespace: shadowmail
type: Opaque
data:
  DB_PASSWORD: "${DB_PASSWORD}"
  SECRET_KEY: "${SECRET_KEY}"
---
apiVersion: v1
kind: Service
metadata:
  name: shadowmail-flask-service
  labels:
    app: shadowmail
    component: flask
  namespace: shadowmail
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: shadowmail
    component: flask
